# ------------------------------------------------------------
# 파일명: task.py
# 위치: api/schemas/task.py
# 이 파일은 '할 일(Task)' 데이터를 어떻게 주고받을지를 정의한 곳이다.
# - 즉, API에서 사용하는 데이터의 '모양(구조)'을 정해준다.
# - FastAPI에서는 Pydantic 모델을 사용해 구조를 정의한다.
# ------------------------------------------------------------

from pydantic import BaseModel, Field
# - BaseModel: 모든 데이터 모델의 기본이 되는 클래스
# - Field: 필드에 대한 설명, 예시, 기본값 등을 지정할 수 있음

# ------------------------------------------------------------
# [1] 공통 속성 클래스: TaskBase
# - title(할 일 제목)만 포함
# - TaskCreate, TaskCreateResponse, Task가 공통으로 사용하는 부분을 따로 묶은 클래스
# - TaskCreate, TaskCreateResponse, Task 모델들이 이 클래스를 상속받아 사용
# ------------------------------------------------------------
class TaskBase(BaseModel):
    title: str | None = Field(
        default=None,  # 값이 없을 수도 있으므로 기본값을 None으로 설정
        examples=["세탁소에 맡긴 것을 찾으러 가기"]  # 예시 제목을 보여준다
    )
    # * title: 할 일의 제목 (str 또는 None)
    # * None이 들어갈 수도 있다는 뜻은 → 값이 없어도 일단 허용함

# ------------------------------------------------------------
# [2] 할 일 생성 요청용 모델: TaskCreate
# - 클라이언트가 서버로 '할 일을 추가할 때' 사용하는 구조
# - title만 필요하므로 TaskBase 그대로 사용
# ------------------------------------------------------------
class TaskCreate(TaskBase):
    pass
    # * 상속만 하고 필드를 추가하지 않음 (title만 있으면 되므로)
    # * TaskBase에 정의된 내용을 그대로 사용함

# ------------------------------------------------------------
# [3] 할 일 생성 응답용 모델: TaskCreateResponse
# - 서버가 클라이언트에게 응답할 때 사용
# - 할 일 번호(id)도 함께 전달해야 하므로 id 필드 추가
# ------------------------------------------------------------
class TaskCreateResponse(TaskCreate):
    id: int  # 새로 생성된 할 일의 고유 번호

    class Config:
        orm_mode = True
        # * ORM(SQLAlchemy 등) 객체를 이 모델로 자동 변환할 수 있게 설정
        # * DB 객체에서 값을 가져올 때 사용됨

# ------------------------------------------------------------
# [4] 할 일 전체 정보를 표현하는 모델: Task
# - 목록 조회 등에서 사용됨
# - id, title, done을 포함
# ------------------------------------------------------------
class Task(TaskBase):
    id: int  # 할 일 번호 (정수, 예: 1, 2, 3 등)

    done: bool = Field(
        default=False,  # 기본값은 완료되지 않음(False)
        description="완료 플래그"  # True면 완료, False면 미완료를 나타냄
    )
    # * done: 이 할일 끝났는지를 표시하는 값 (True면 완료, False면 미완료)

    class Config:
        orm_mode = True
        # * 이 설정을 해두면 DB에서 가져온 ORM 객체를 그대로 응답 모델에 사용할 수 있음
