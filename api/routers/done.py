# ------------------------------------------------------------
# 파일명: done.py
# 위치: api/routers/done.py
# 이 파일은 할 일(To-Do) 항목을 "완료 상태로 변경"하거나
# "완료 상태를 다시 해제"하는 기능을 정의한 곳이다.
# - 기능 1: 완료 처리 (PUT 방식)
# - 기능 2: 완료 해제 (DELETE 방식)
# - 주소 형식: /tasks/{할 일 번호}/done
# ------------------------------------------------------------

# * FastAPI에서 여러 개의 주소(URL 경로)를 그룹으로 묶어
#   관리할 수 있도록 도와주는 도구
from fastapi import APIRouter

# * router 객체를 생성한다
# - 여러 기능(API 경로)을 이 router에 모아서
#   나중에 main.py에서 FastAPI 앱에 등록할 수 있다.
router = APIRouter()

# ------------------------------------------------------------
# [1] 할 일을 "완료 상태"로 표시하는 기능
# - 사용자가 /tasks/3/done 주소로 PUT 요청을 보내면,
#   3번 할 일을 "완료됨"으로 바꾸는 역할을 한다.
# ------------------------------------------------------------
@router.put("/tasks/{task_id}/done", response_model=None)
# - method: PUT → 기존 정보를 수정하거나 상태를 바꿀 때 사용
# - {task_id} → 숫자 값이며, 완료 처리할 할 일의 번호를 뜻함
# - /done → 완료 상태로 변경한다는 뜻을 URL로 표현한 것
async def mark_task_as_done(task_id: int):
    return
    # * 아직은 DB와 연결하지 않았기 때문에 실제 구현 내용은 없음
    # * 나중에 이 부분에 완료 처리를 위한 DB 코드가 들어갈 예정

# ------------------------------------------------------------
# [2] 할 일을 "완료 상태 해제"하는 기능
# - 사용자가 /tasks/3/done 주소로 DELETE 요청을 보내면,
#   3번 할 일을 "미완료 상태"로 되돌리는 역할을 한다.
# ------------------------------------------------------------
@router.delete("/tasks/{task_id}/done", response_model=None)
# - method: DELETE → 기존 정보를 삭제하거나 취소할 때 사용
# - 여기서는 "완료 표시"를 지우는 역할
# - PUT과 DELETE는 서로 반대 동작 (완료 ↔ 해제)
async def unmark_task_as_done(task_id: int):
    return
    # * 이 부분도 나중에 DB와 연결되면,
    #   완료 상태를 False로 바꾸는 코드가 들어갈 예정이다
